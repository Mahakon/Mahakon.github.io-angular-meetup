{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.less","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.component.less","./src/app/auth/auth.component.ts","./src/app/auth/auth.guard.ts","./src/app/chat/chat-toolbar/chat-toolbar.component.html","./src/app/chat/chat-toolbar/chat-toolbar.component.less","./src/app/chat/chat-toolbar/chat-toolbar.component.ts","./src/app/chat/chat.guard.ts","./src/app/chat/chat.resolver.ts","./src/app/chat/main-chat/main-chat.component.html","./src/app/chat/main-chat/main-chat.component.less","./src/app/chat/main-chat/main-chat.component.ts","./src/app/chat/message-input/message-input.component.html","./src/app/chat/message-input/message-input.component.less","./src/app/chat/message-input/message-input.component.ts","./src/app/chat/message/message.component.html","./src/app/chat/message/message.component.less","./src/app/chat/message/message.component.ts","./src/app/config.ts","./src/app/services/chat.service.ts","./src/app/services/user.service.ts","./src/app/services/websocet.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","Error","keys","module","exports","id","routes","path","component","__WEBPACK_IMPORTED_MODULE_3__auth_auth_component__","canActivate","__WEBPACK_IMPORTED_MODULE_4__auth_auth_guard__","__WEBPACK_IMPORTED_MODULE_2__chat_main_chat_main_chat_component__","__WEBPACK_IMPORTED_MODULE_5__chat_chat_guard__","messageList","__WEBPACK_IMPORTED_MODULE_6__chat_chat_resolver__","redirectTo","pathMatch","AppRoutingModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_router__","imports","forRoot","enableTracing","AppComponent","selector","AppModule","__WEBPACK_IMPORTED_MODULE_1__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__app_component__","__WEBPACK_IMPORTED_MODULE_7__chat_main_chat_main_chat_component__","__WEBPACK_IMPORTED_MODULE_9__chat_chat_toolbar_chat_toolbar_component__","__WEBPACK_IMPORTED_MODULE_10__chat_message_input_message_input_component__","__WEBPACK_IMPORTED_MODULE_12__chat_message_message_component__","__WEBPACK_IMPORTED_MODULE_15__auth_auth_component__","__WEBPACK_IMPORTED_MODULE_0__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_5__angular_forms__","__WEBPACK_IMPORTED_MODULE_3__app_routing_module__","__WEBPACK_IMPORTED_MODULE_4__angular_common_http__","__WEBPACK_IMPORTED_MODULE_6__angular_platform_browser_animations__","__WEBPACK_IMPORTED_MODULE_8__angular_material__","providers","__WEBPACK_IMPORTED_MODULE_11__services_user_service__","__WEBPACK_IMPORTED_MODULE_13__services_websocet_service__","__WEBPACK_IMPORTED_MODULE_14__services_chat_service__","__WEBPACK_IMPORTED_MODULE_16__auth_auth_guard__","__WEBPACK_IMPORTED_MODULE_17__chat_chat_guard__","__WEBPACK_IMPORTED_MODULE_18__chat_chat_resolver__","bootstrap","AuthComponent","router","formBuilder","userService","this","prototype","ngOnInit","createForm","checkUserLogin","_this","inputLogin","authForm","get","valueChanges","pipe","__WEBPACK_IMPORTED_MODULE_3_rxjs_operators__","login","checkIsLogin","subscribe","ans","isLogin","setErrors","err","console","log","addUser","value","user","navigateByUrl","getErrorMessage","error","errors","required","group","__WEBPACK_IMPORTED_MODULE_1__angular_forms__","__WEBPACK_IMPORTED_MODULE_4__angular_router__","__WEBPACK_IMPORTED_MODULE_2__services_user_service__","AuthGuard","next","state","undefined","isValidSession","reject","checkSession","ChatToolbarComponent","ChatGuard","ChatResolver","getMessageList","__WEBPACK_IMPORTED_MODULE_1__services_user_service__","MainChatComponent","chatService","route","snapshot","data","subscriptionToAddNewMessage","getSubscriptionToEvent","__WEBPACK_IMPORTED_MODULE_2__services_chat_service__","ADD","getNewMessage","ngOnDestroy","unsubscribe","addNewMessage","content","sendEvent","userId","push","__WEBPACK_IMPORTED_MODULE_3__angular_router__","MessageInputComponent","handleNewMessage","emit","handleInputMessage","_a","target","textContent","MessageComponent","getRandomColor","background","__WEBPACK_IMPORTED_MODULE_1_randomcolor__","hue","luminosity","seed","message","host","wsHost","backHost","ChatEvents","ChatService","websocketService","eventEmitter","__WEBPACK_IMPORTED_MODULE_1_events__","openConnection","createEvents","websocket","connect","__WEBPACK_IMPORTED_MODULE_5__config__","map","response","JSON","parse","res","DELETE","LIKE","opening","event","__WEBPACK_IMPORTED_MODULE_3_rxjs_observable_fromEvent__","__WEBPACK_IMPORTED_MODULE_4__websocet_service__","__WEBPACK_IMPORTED_MODULE_6__user_service__","UserService","http","headers","__WEBPACK_IMPORTED_MODULE_1__angular_common_http__","Access-Control-Allow-Credentials","Access-Control-Allow-Origin","__WEBPACK_IMPORTED_MODULE_2__config__","Access-Control-Allow-Methods","Access-Control-Allow-Headers","options","withCredentials","formData","FormData","url","append","post","WebSocetService","subject","__WEBPACK_IMPORTED_MODULE_1_rxjs_Subject__","ws","create","WebSocket","observable","__WEBPACK_IMPORTED_MODULE_2_rxjs_Observable__","obs","onmessage","bind","onerror","onclose","complete","close","observer","readyState","OPEN","send","stringify","__webpack_require__","d","__webpack_exports__","environment","production","__WEBPACK_IMPORTED_MODULE_3__environments_environment__","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__","bootstrapModule","__WEBPACK_IMPORTED_MODULE_2__app_app_module__","catch"],"mappings":"mFAAA,SAAAA,EAAAC,GAGA,OAAAC,QAAAC,UAAAC,KAAA,WACA,UAAAC,MAAA,uBAAAJ,EAAA,QAGAD,EAAAM,KAAA,WAA4C,UAC5CN,EAAAG,QAAAH,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,myBCFMC,IAEFC,KAAM,OACNC,UAAWC,EAAA,EACXC,aAAeC,EAAA,KAGfJ,KAAM,OACNC,UAAWI,EAAA,EACXF,aAAeG,EAAA,GACfd,SAAWe,YAAaC,EAAA,KAExBR,KAAM,GAAIS,WAAY,OAAQC,UAAW,SAS7CC,EAAA,oBAAAA,KAAgC,OAAnBA,EAAgBC,GAN5BC,OAAAC,EAAA,EAAAD,EACChB,SACEkB,EAAA,GAEFC,SAAWD,EAAA,EAAaE,QAAQlB,GAASmB,eAAe,QAE7CP,GAAb,iDC7BAf,EAAAC,QAAA,kFCAAD,EAAAC,QAAA,gfCQAsB,EAAA,oBAAAA,KACA,OADaA,EAAYP,GANxBC,OAAAC,EAAA,EAAAD,EACCO,SAAU,oGAKCD,GAAb,o2CCoDAE,EAAA,oBAAAA,KAAyB,OAAZA,EAAST,GAlCrBC,OAAAS,EAAA,EAAAT,EACCU,cACEC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAEFb,SACEc,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAF,EAAA,EACAA,EAAA,EACAG,EAAA,EACAC,EAAA,EACAA,EAAA,EACAA,EAAA,EACAA,EAAA,EACAA,EAAA,EACAA,EAAA,GAEFC,WACEC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,GAEFC,WAAYnB,EAAA,MAEDH,GAAb,uDC5DAzB,EAAAC,QAAA,unBCAAD,EAAAC,QAAA,o4CCWA+C,EAAA,WAGE,SAAAA,EACUC,EACAC,EACAC,GAFAC,KAAAH,SACAG,KAAAF,cACAE,KAAAD,cAwDZ,OArDEH,EAAAK,UAAAC,SAAA,WACEF,KAAKG,aACLH,KAAKI,kBAGPR,EAAAK,UAAAG,eAAA,eAAAC,EAAAL,KACQM,EAAaN,KAAKO,SAASC,IAAI,SAErCF,EAAWG,aACRC,KACC7C,OAAA8C,EAAA,EAAA9C,CAAa,KACbA,OAAA8C,EAAA,EAAA9C,CAAU,SAAA+C,GACR,OAAOP,EAAKN,YAAYc,aAAaD,MAGxCE,UACC,SAAAC,GACMA,EAAIC,SACNV,EAAWW,WAAYD,SAAS,KAGlC,SAAAE,GACAC,QAAQC,IAAIF,MAKpBtB,EAAAK,UAAAoB,QAAA,eAAAhB,EAAAL,KACEA,KAAKD,YAAYsB,QAAQrB,KAAKO,SAASC,IAAI,SAASc,OACjDR,UACC,SAAAS,GACElB,EAAKN,YAAYwB,KAAOA,EACxBlB,EAAKR,OAAO2B,cAAc,UAE5B,SAAAN,GACEC,QAAQC,IAAIF,MAKpBtB,EAAAK,UAAAwB,gBAAA,WACE,IAAMC,EAAQ1B,KAAKO,SAASC,IAAI,SAASmB,OACzC,OAAOD,EAAME,SAAW,yBACtBF,EAAMV,QAAU,wBACd,IAGNpB,EAAAK,UAAAE,WAAA,WACEH,KAAKO,SAAWP,KAAKF,YAAY+B,OAC/BjB,OAAS,GAAIkB,EAAA,EAAWF,aA1DjBhC,EAAahC,GALzBC,OAAAC,EAAA,EAAAD,EACCO,SAAU,sIAQQ2D,EAAA,EACKD,EAAA,EACAE,EAAA,KANZpC,GAAb,utBCLAqC,EAAA,WAEE,SAAAA,EACUpC,EACAE,GADAC,KAAAH,SACAG,KAAAD,cAgCZ,OA7BEkC,EAAAhC,UAAA9C,YAAA,SACE+E,EACAC,GAEA,YAA8BC,IAA1BpC,KAAKD,YAAYwB,MACnBJ,QAAQC,IAAIpB,KAAKD,YAAYwB,MAC7BvB,KAAKH,OAAO2B,cAAc,UACnB,GAGFxB,KAAKqC,kBAGdJ,EAAAhC,UAAAoC,eAAA,eAAAhC,EAAAL,KACE,OAAO,IAAIzD,QAAiB,SAACC,EAAS8F,GACpCjC,EAAKN,YAAYwC,eACdzB,UACC,SAAAS,GACEJ,QAAQC,IAAIG,GACZlB,EAAKN,YAAYwB,KAAOA,EACxBlB,EAAKR,OAAO2B,cAAc,SAC1BhF,GAAQ,IAEV,SAAA0E,GACEC,QAAQC,IAAIF,GACZ1E,GAAQ,QAhCPyF,EAASrE,GADrBC,OAAAC,EAAA,EAAAD,0BAImBE,EAAA,EACKiE,EAAA,KAJZC,GAAb,4ECNArF,EAAAC,QAAA,wKCAAD,EAAAC,QAAA,ixCCOA2F,EAAA,WAIE,SAAAA,KAKF,OAHEA,EAAAvC,UAAAC,SAAA,aAJStC,GAARC,OAAAC,EAAA,EAAAD,wDAFU2E,EAAoB5E,GALhCC,OAAAC,EAAA,EAAAD,EACCO,SAAU,4LAICoE,GAAb,utBCDAC,EAAA,WAEE,SAAAA,EACU5C,EACAE,GADAC,KAAAH,SACAG,KAAAD,cA8BZ,OA3BE0C,EAAAxC,UAAA9C,YAAA,SACE+E,EACAC,GAEA,YAA8BC,IAA1BpC,KAAKD,YAAYwB,MAIdvB,KAAKqC,kBAGdI,EAAAxC,UAAAoC,eAAA,eAAAhC,EAAAL,KACE,OAAO,IAAIzD,QAAiB,SAACC,EAAS8F,GACpCjC,EAAKN,YAAYwC,eACdzB,UACC,SAAAS,GACEJ,QAAQC,IAAIG,GACZlB,EAAKN,YAAYwB,KAAOA,EACxB/E,GAAQ,IAEV,SAAA0E,GACEC,QAAQC,IAAIF,GACZb,EAAKR,OAAO2B,cAAc,SAC1BhF,GAAQ,QA9BPiG,EAAS7E,GADrBC,OAAAC,EAAA,EAAAD,0BAImBE,EAAA,EACKiE,EAAA,KAJZS,GAAb,qqBCCAC,EAAA,WAEE,SAAAA,EAAoB3C,GAAAC,KAAAD,cAKtB,OAHE2C,EAAAzC,UAAAzD,QAAA,WACE,OAAOwD,KAAKD,YAAY4C,kBALfD,EAAY9E,GADxBC,OAAAC,EAAA,EAAAD,0BAGkC+E,EAAA,KAFtBF,GAAb,sECPA9F,EAAAC,QAAA,qiBCAAD,EAAAC,QAAA,o2DCWAgG,EAAA,WAME,SAAAA,EACU9C,EACA+C,EACAC,GAFA/C,KAAAD,cACAC,KAAA8C,cACA9C,KAAA+C,QAmCZ,OA/BEF,EAAA5C,UAAAC,SAAA,eAAAG,EAAAL,KACEA,KAAKuB,KAAOvB,KAAKD,YAAYwB,KAC7BvB,KAAKzC,YAAcyC,KAAK8C,YAAYvF,YACpCyC,KAAKzC,YAAcyC,KAAK+C,MAAMC,SAASC,KAAK1F,YAC5CyC,KAAKkD,4BACHlD,KAAK8C,YAAYK,uBAAuBC,EAAA,EAAWC,KAChDvC,UACC,SAAAmC,GACE5C,EAAKiD,cAAcL,MAK7BJ,EAAA5C,UAAAsD,YAAA,WACEvD,KAAKkD,4BAA4BM,eAGnCX,EAAA5C,UAAAwD,cAAA,SAAcC,GACZ1D,KAAK8C,YAAYa,UACfP,EAAA,EAAWC,KAELK,QAASA,EACTE,OAAQ5D,KAAKuB,KAAKzE,MAK5B+F,EAAA5C,UAAAqD,cAAA,SAAcL,GACZjD,KAAKzC,YAAYsG,KAAKZ,IAzCbJ,EAAiBjF,GAL7BC,OAAAC,EAAA,EAAAD,EACCO,SAAU,yKAWawE,EAAA,EACAQ,EAAA,EACNU,EAAA,KATNjB,GAAb,8ECXAjG,EAAAC,QAAA,snBCAAD,EAAAC,QAAA,yiCCQAkH,EAAA,WAIE,SAAAA,IADU/D,KAAAyD,cAAsC,IAAI3F,EAAA,EAetD,OAZEiG,EAAA9D,UAAAC,SAAA,aAGA6D,EAAA9D,UAAA+D,iBAAA,WACEhE,KAAKyD,cAAcQ,KAAKjE,KAAK0D,SAC7B1D,KAAK0D,QAAU,IAGjBK,EAAA9D,UAAAiE,mBAAA,SAAmBC,OAAEC,EAAAD,EAAAC,OACnBpE,KAAK0D,QAAUU,EAAOC,aAZdzG,GAATC,OAAAC,EAAA,EAAAD,mBAAwBC,EAAA,wCAHdiG,EAAqBnG,GALjCC,OAAAC,EAAA,EAAAD,EACCO,SAAU,iMAIC2F,GAAb,kECRAnH,EAAAC,QAAA,6VCAAD,EAAAC,QAAA,m6DCUAyH,EAAA,WAKE,SAAAA,KAeF,OAbEA,EAAArE,UAAAC,SAAA,aAGAoE,EAAArE,UAAAsE,eAAA,WAOE,OAASC,WANKC,GACZC,IAAK,SACLC,WAAY,QACZC,KAAM5E,KAAK6E,QAAQjB,WAZdhG,GAARC,OAAAC,EAAA,EAAAD,0DACQD,GAARC,OAAAC,EAAA,EAAAD,uDAHUyG,EAAgB1G,GAL5BC,OAAAC,EAAA,EAAAD,EACCO,SAAU,mKAICkG,GAAb,uJCVO,IAAMQ,EAAO,6BACPC,EAAS,2CACTC,EAAW,+JCQZC,syBAAZ,SAAYA,GACVA,EAAA,UACAA,EAAA,gBACAA,EAAA,YAHF,CAAYA,WAcZ,IAAAC,EAAA,WAKE,SAAAA,EACUC,EACApF,GADAC,KAAAmF,mBACAnF,KAAAD,cALFC,KAAAoF,aAAe,IAAIC,EAAA,aAOzBrF,KAAKsF,iBACLtF,KAAKuF,eACLvF,KAAKzC,eAqDT,OAlDE2H,EAAAjF,UAAAqF,eAAA,WACCtF,KAAKwF,UAA0BxF,KAAKmF,iBAChCM,QAAQC,EAAA,EAAS1F,KAAKD,YAAYwB,KAAKzE,IACvC6I,IAAI,SAACC,GACJ,OAAOC,KAAKC,MAAMF,EAAS3C,SAIjCiC,EAAAjF,UAAAsF,aAAA,eAAAlF,EAAAL,KACEA,KAAKwF,UAAU1E,UACb,SAAAiF,GACMA,EAAW,QAAMd,EAAW5B,MAC9BlC,QAAQC,IAAI,OAAS6D,EAAW5B,KAChChD,EAAK+E,aAAanB,KAAKgB,EAAW5B,IAChC0C,EAAU,YAEiB3D,IAA3B2D,EAAId,EAAWe,UACjB7E,QAAQC,IAAI,OAAS6D,EAAWe,QAChC3F,EAAK+E,aAAanB,KAAKgB,EAAWe,OAChCD,EAAId,EAAWe,eAEU5D,IAAzB2D,EAAId,EAAWgB,QACjB9E,QAAQC,IAAI,OAAS6D,EAAWgB,MAChC5F,EAAK+E,aAAanB,KAAKgB,EAAWgB,KAChCF,EAAId,EAAWgB,SAGrB,SAAA/E,GACEC,QAAQC,IAAIF,IAEd,WACMb,EAAK8E,iBAAiBe,UACxB7F,EAAKiF,iBACLjF,EAAKkF,mBAMbL,EAAAjF,UAAAkD,uBAAA,SAAuBgD,GACrB,OAAOtI,OAAAuI,EAAA,EAAAvI,CAAUmC,KAAKoF,aAAce,IAGtCjB,EAAAjF,UAAA0D,UAAA,SAAUwC,EAAmBlD,GAC3BjD,KAAKwF,UAAUtD,MACbiE,MAAOA,EACPlD,KAAMA,KA5DCiC,EAAWtH,GADvBC,OAAAC,EAAA,EAAAD,0BAO6BwI,EAAA,EACLC,EAAA,KAPZpB,GAAb,4sBCZAqB,EAAA,WAKE,SAAAA,EACUC,GAAAxG,KAAAwG,OAERxG,KAAKyG,QAAU,IAAIC,EAAA,GACjBC,mCAAoC,OACpCC,8BAA+BC,EAAA,EAC/BC,+BAAgC,IAChCC,gCAAkC,eAAgB,OAEpD/G,KAAKgH,SAAYP,QAASzG,KAAKyG,QAASQ,iBAAiB,GA+B7D,OA5BEV,EAAAtG,UAAAY,aAAA,SAAaD,GACX,IAAMsG,EAAW,IAAIC,SAAYC,EAAMP,EAAA,EAAO,aAI9C,OAFAK,EAASG,OAAO,QAASzG,GAElBZ,KAAKwG,KAAKc,KAAUF,EAAKF,IAGlCX,EAAAtG,UAAAoB,QAAA,SAAQT,GACN,IAAMsG,EAAW,IAAIC,SAAYC,EAAMP,EAAA,EAAO,OAI9C,OAFAK,EAASG,OAAO,QAASzG,GAElBZ,KAAKwG,KAAKc,KAAeF,EAAKF,EAAUlH,KAAKgH,UAGtDT,EAAAtG,UAAAsC,aAAA,WACE,IAAM6E,EAAMP,EAAA,EAAO,gBAEnB,OAAO7G,KAAKwG,KAAKhG,IAAc4G,EAAKpH,KAAKgH,UAG3CT,EAAAtG,UAAA0C,eAAA,WACE,IAAMyE,EAAMP,EAAA,EAAO,oBAEnB,OAAO7G,KAAKwG,KAAKhG,IAAe4G,IA1CvBb,EAAW3I,GADvBC,OAAAC,EAAA,EAAAD,0BAOiB6I,EAAA,KANLH,GAAb,6tBCNAgB,EAAA,WAKE,SAAAA,IAJQvH,KAAAwH,QAAU,IAAIC,EAAA,EACtBzH,KAAA0H,QAAKtF,EACLpC,KAAAkG,SAAU,EAsCZ,OAlCSqB,EAAAtH,UAAAwF,QAAP,SAAe2B,GAGb,OAFApH,KAAKwH,QAAUxH,KAAK2H,OAAOP,GAC3BjG,QAAQC,IAAI,2BAA6BgG,GAClCpH,KAAKwH,SAGND,EAAAtH,UAAA0H,OAAR,SAAeP,GAAf,IAAA/G,EAAAL,KACEA,KAAK0H,GAAK,IAAIE,UAAUR,GAExB,IAAMS,EAAaC,EAAA,EAAWH,OAC5B,SAACI,GAIC,OAHA1H,EAAKqH,GAAGM,UAAYD,EAAI7F,KAAK+F,KAAKF,GAClC1H,EAAKqH,GAAGQ,QAAUH,EAAIrG,MAAMuG,KAAKF,GACjC1H,EAAKqH,GAAGS,QAAUJ,EAAIK,SAASH,KAAKF,GAC7B1H,EAAKqH,GAAGW,MAAMJ,KAAK5H,EAAKqH,MAG7BY,GACJpG,KAAM,SAACe,GACD5C,EAAKqH,GAAGa,aAAeX,UAAUY,MACnCnI,EAAKqH,GAAGe,KAAK5C,KAAK6C,UAAUzF,MAKlC,OAAOwE,EAAA,EAAQE,OAAOW,EAAUT,IAGlCN,EAAAtH,UAAAoI,MAAA,gBACkBjG,IAAZpC,KAAK0H,KACP1H,KAAK0H,GAAGW,QACRlH,QAAQC,IAAI,sBAtCLmG,EAAe3J,GAD3BC,OAAAC,EAAA,EAAAD,8BACY0J,GAAb,qECNAoB,EAAAC,EAAAC,EAAA,sBAAAC,IAKO,IAAMA,GACXC,YAAY,wWCCVC,EAAA,EAAYD,YACdlL,OAAAC,EAAA,IAAAD,GAGFA,OAAAoL,EAAA,EAAApL,GAAyBqL,gBAAgBC,EAAA,GACtCC,MAAM,SAAAlI,GAAO,OAAAC,QAAQC,IAAIF","file":"main.bundle85.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainChatComponent } from './chat/main-chat/main-chat.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { ChatGuard } from './chat/chat.guard';\nimport { ChatResolver } from './chat/chat.resolver';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    canActivate: [ AuthGuard ]\n  },\n  {\n    path: 'chat',\n    component: MainChatComponent,\n    canActivate: [ ChatGuard ],\n    resolve: { messageList: ChatResolver }\n  },\n  { path: '', redirectTo: 'auth', pathMatch: 'full' }\n];\n\n@NgModule({\n  exports:  [\n    RouterModule\n  ],\n  imports: [ RouterModule.forRoot(routes, {enableTracing: false}) ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.less\n// module id = ./src/app/app.component.less\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\n\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MainChatComponent } from './chat/main-chat/main-chat.component';\nimport {\n  MatIconModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatMenuModule,\n  MatInputModule,\n  MatCardModule} from '@angular/material';\nimport { ChatToolbarComponent } from './chat/chat-toolbar/chat-toolbar.component';\nimport { MessageInputComponent } from './chat/message-input/message-input.component';\nimport { UserService } from './services/user.service';\nimport { MessageComponent } from './chat/message/message.component';\nimport { WebSocetService } from './services/websocet.service';\nimport { ChatService } from './services/chat.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport {ChatGuard} from './chat/chat.guard';\nimport {ChatResolver} from './chat/chat.resolver';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainChatComponent,\n    ChatToolbarComponent,\n    MessageInputComponent,\n    MessageComponent,\n    AuthComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatInputModule,\n    MatCardModule\n  ],\n  providers: [\n    UserService,\n    WebSocetService,\n    ChatService,\n    AuthGuard,\n    ChatGuard,\n    ChatResolver\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div class=\\\"form-container\\\">\\n  <form class=\\\"login-form\\\"\\n        [formGroup]=\\\"authForm\\\">\\n    <mat-form-field class=\\\"login\\\">\\n      <input matInput\\n             placeholder=\\\"login\\\"\\n             formControlName=\\\"login\\\"\\n             required=\\\"required\\\">\\n      <mat-error *ngIf=\\\"authForm.invalid\\\">\\n        {{getErrorMessage()}}\\n      </mat-error>\\n    </mat-form-field>\\n  </form>\\n  <button mat-button\\n          color=\\\"primary\\\"\\n          class=\\\"chat-button\\\"\\n          [disabled]=\\\"authForm.invalid\\\"\\n          (click)=\\\"addUser()\\\">\\n    Go Chating\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/auth.component.html\n// module id = ./src/app/auth/auth.component.html\n// module chunks = main","module.exports = \".form-container {\\n  margin: 140px auto;\\n  background: #FFD4AE;\\n  border-radius: 2px;\\n  padding: 10px;\\n  max-width: 400px;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n}\\n.form-container .login-form .login {\\n  width: 100%;\\n  font-size: 24px;\\n}\\n.form-container .chat-button {\\n  margin-top: 10px;\\n  font-size: 24px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/auth/auth.component.less\n// module id = ./src/app/auth/auth.component.less\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.less']\n})\nexport class AuthComponent implements OnInit {\n  authForm: FormGroup;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private userService: UserService\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n    this.checkUserLogin();\n  }\n\n  checkUserLogin() {\n    const inputLogin = this.authForm.get('login');\n\n    inputLogin.valueChanges\n      .pipe(\n        debounceTime(500),\n        switchMap(login => {\n          return this.userService.checkIsLogin(login);\n        })\n      )\n      .subscribe(\n        ans => {\n          if (ans.isLogin) {\n            inputLogin.setErrors({ isLogin: true });\n          }\n        },\n          err => {\n          console.log(err);\n        }\n      );\n  }\n\n  addUser() {\n    this.userService.addUser(this.authForm.get('login').value)\n      .subscribe(\n        user => {\n          this.userService.user = user;\n          this.router.navigateByUrl('/chat');\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  getErrorMessage() {\n    const error = this.authForm.get('login').errors;\n    return error.required ? 'You must enter a value' :\n      error.isLogin ? 'Login is already used' :\n        '';\n  }\n\n  createForm() {\n    this.authForm = this.formBuilder.group({\n      login: [ '', Validators.required ],\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (this.userService.user !== undefined) {\n      console.log(this.userService.user);\n      this.router.navigateByUrl('/chat');\n      return false;\n    }\n\n    return this.isValidSession();\n  }\n\n  isValidSession(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.userService.checkSession()\n        .subscribe(\n          user => {\n            console.log(user);\n            this.userService.user = user;\n            this.router.navigateByUrl('/chat');\n            resolve(false);\n          },\n          err => {\n            console.log(err);\n            resolve(true);\n        });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.guard.ts","module.exports = \"<mat-toolbar class=\\\"chat-toolbar\\\">\\n  <span class=\\\"title\\\">{{login}}</span>\\n</mat-toolbar>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/chat-toolbar/chat-toolbar.component.html\n// module id = ./src/app/chat/chat-toolbar/chat-toolbar.component.html\n// module chunks = main","module.exports = \":host .chat-toolbar {\\n  background-color: #FFF9EF;\\n  background-image: -webkit-gradient(linear, right bottom, left top, from(#FFF9EF), color-stop(#FFD7B7), color-stop(#FFB3A5), color-stop(#FF8B9D), to(#FF6F9C));\\n  background-image: linear-gradient(to top left, #FFF9EF, #FFD7B7, #FFB3A5, #FF8B9D, #FF6F9C);\\n  background-repeat: no-repeat;\\n  background-position: right top;\\n  background-attachment: fixed;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between;\\n}\\n:host .chat-toolbar .title {\\n  font-size: 24px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/chat-toolbar/chat-toolbar.component.less\n// module id = ./src/app/chat/chat-toolbar/chat-toolbar.component.less\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chat-toolbar',\n  templateUrl: './chat-toolbar.component.html',\n  styleUrls: ['./chat-toolbar.component.less']\n})\nexport class ChatToolbarComponent implements OnInit {\n\n  @Input() login: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/chat-toolbar/chat-toolbar.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class ChatGuard implements CanActivate {\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    if (this.userService.user !== undefined) {\n      return true;\n    }\n\n    return this.isValidSession();\n  }\n\n  isValidSession(): Promise<boolean> {\n    return new Promise<boolean>((resolve, reject) => {\n      this.userService.checkSession()\n        .subscribe(\n          user => {\n            console.log(user);\n            this.userService.user = user;\n            resolve(true);\n          },\n          err => {\n            console.log(err);\n            this.router.navigateByUrl('/auth');\n            resolve(false);\n          });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/chat.guard.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { Message } from '../services/chat.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class ChatResolver implements Resolve<Message[]> {\n\n  constructor(private userService: UserService) {}\n\n  resolve(): Observable<Message[]> {\n    return this.userService.getMessageList();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/chat.resolver.ts","module.exports = \"<app-chat-toolbar [login]=\\\"user.login\\\">\\n</app-chat-toolbar>\\n<div class=\\\"working-area\\\">\\n  <div class=\\\"chat-container\\\">\\n    <div class=\\\"message-container\\\" #scrollMe [scrollTop]=\\\"scrollMe.scrollHeight\\\">\\n      <app-message *ngFor=\\\"let message of messageList\\\"\\n                   [message]=\\\"message\\\"\\n                   [user]=\\\"user\\\">\\n      </app-message>\\n    </div>\\n    <app-message-input (addNewMessage)=\\\"addNewMessage($event)\\\">\\n    </app-message-input>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/main-chat/main-chat.component.html\n// module id = ./src/app/chat/main-chat/main-chat.component.html\n// module chunks = main","module.exports = \":host {\\n  height: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n}\\n:host .working-area {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 100%;\\n          flex: 1 1 100%;\\n  overflow-y: auto;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n:host .working-area .chat-container {\\n  max-width: 800px;\\n  min-width: 200px;\\n  margin: 0 auto 0 auto;\\n  background: white;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n  padding: 10px;\\n  min-height: 0;\\n}\\n:host .working-area .chat-container .message-container {\\n  padding: 20px 40px 20px 40px;\\n  min-height: 0px;\\n  overflow-y: auto;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/main-chat/main-chat.component.less\n// module id = ./src/app/chat/main-chat/main-chat.component.less\n// module chunks = main","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { UserData, UserService } from '../../services/user.service';\nimport {ChatEvents, ChatService, Message} from '../../services/chat.service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-main-chat',\n  templateUrl: './main-chat.component.html',\n  styleUrls: ['./main-chat.component.less']\n})\nexport class MainChatComponent implements OnInit, OnDestroy {\n\n  user: UserData;\n  messageList: Message[];\n  subscriptionToAddNewMessage: Subscription;\n\n  constructor(\n    private userService: UserService,\n    private chatService: ChatService,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit() {\n    this.user = this.userService.user;\n    this.messageList = this.chatService.messageList;\n    this.messageList = this.route.snapshot.data.messageList;\n    this.subscriptionToAddNewMessage =\n      this.chatService.getSubscriptionToEvent(ChatEvents.ADD)\n        .subscribe(\n          data => {\n            this.getNewMessage(data);\n          }\n        );\n  }\n\n  ngOnDestroy() {\n    this.subscriptionToAddNewMessage.unsubscribe();\n  }\n\n  addNewMessage(content) {\n    this.chatService.sendEvent(\n      ChatEvents.ADD,\n      {\n            content: content,\n            userId: this.user.id\n           }\n    );\n  }\n\n  getNewMessage(data) {\n    this.messageList.push(data);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/main-chat/main-chat.component.ts","module.exports = \"<div class=\\\"input-container\\\">\\n  <a mat-icon-button\\n     class=\\\"__bottom-location\\\"\\n     href=\\\"https://github.com/Mahakon/\\\"\\n     target=\\\"_blank\\\">\\n    <mat-icon>favorite</mat-icon>\\n  </a>\\n  <div class=\\\"message\\\"\\n       contentEditable=\\\"true\\\"\\n       [textContent]=\\\"content\\\"\\n       (input)=\\\"handleInputMessage($event)\\\"\\n       (keyup.enter)=\\\"handleNewMessage()\\\">\\n    {{content}}\\n  </div>\\n  <button (click)=\\\"handleNewMessage()\\\"\\n          mat-icon-button\\n          class=\\\"__bottom-location\\\">\\n    <mat-icon>send</mat-icon>\\n  </button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/message-input/message-input.component.html\n// module id = ./src/app/chat/message-input/message-input.component.html\n// module chunks = main","module.exports = \":host .input-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n:host .input-container .__bottom-location {\\n  margin: auto auto 0 auto;\\n}\\n:host .input-container .message {\\n  word-wrap: break-word;\\n  border-radius: 2px;\\n  border: 1px solid black;\\n  width: 740px;\\n  max-width: 740px;\\n  min-width: 140px;\\n  min-height: 40px;\\n  padding: 4px;\\n  font-size: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/message-input/message-input.component.less\n// module id = ./src/app/chat/message-input/message-input.component.less\n// module chunks = main","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport setEndOfContenteditable from '../../utils/setEndOfContenteditable';\n\n@Component({\n  selector: 'app-message-input',\n  templateUrl: './message-input.component.html',\n  styleUrls: ['./message-input.component.less']\n})\nexport class MessageInputComponent implements OnInit {\n\n  content: string;\n  @Output() addNewMessage: EventEmitter<string> = new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  handleNewMessage() {\n    this.addNewMessage.emit(this.content);\n    this.content = '';\n  }\n\n  handleInputMessage({ target }) {\n    this.content = target.textContent;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/message-input/message-input.component.ts","module.exports = \"<div class=\\\"message\\\"\\n     [class.anouther-user]=\\\"message.userId!==user.id\\\">\\n  <div class=\\\"text\\\" [ngStyle]=\\\"getRandomColor()\\\">{{message.content}}</div>\\n  <div class=\\\"icon-view\\\">\\n    <mat-icon class=\\\"icon\\\">person</mat-icon>\\n    <span>{{message.login}}</span>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/message/message.component.html\n// module id = ./src/app/chat/message/message.component.html\n// module chunks = main","module.exports = \":host {\\n  margin: 5px;\\n}\\n:host .message {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: end;\\n      -ms-flex-pack: end;\\n          justify-content: flex-end;\\n}\\n:host .message .icon-view {\\n  position: relative;\\n}\\n:host .message .icon-view .icon {\\n  margin: 2px 10px 2px 2px;\\n}\\n:host .message .icon-view .icon + span {\\n  display: none;\\n  background: black;\\n  opacity: 0.6;\\n  color: white;\\n  right: 62%;\\n  top: 60%;\\n  position: absolute;\\n}\\n:host .message .icon-view .icon:hover + span,\\n:host .message .icon-view .icon:focus + span {\\n  cursor: pointer;\\n  display: inline-block;\\n}\\n:host .message .text {\\n  display: inline;\\n  max-width: 600px;\\n  min-width: 100px;\\n  word-wrap: break-word;\\n  border-radius: 4px;\\n  border-bottom-right-radius: 0;\\n  background: none;\\n  padding: 4px;\\n  min-height: 24px;\\n  font-size: 20px;\\n}\\n:host .anouther-user {\\n  -webkit-box-pack: start;\\n      -ms-flex-pack: start;\\n          justify-content: flex-start;\\n}\\n:host .anouther-user .icon-view {\\n  -webkit-box-ordinal-group: 2;\\n      -ms-flex-order: 1;\\n          order: 1;\\n}\\n:host .anouther-user .text {\\n  -webkit-box-ordinal-group: 3;\\n      -ms-flex-order: 2;\\n          order: 2;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chat/message/message.component.less\n// module id = ./src/app/chat/message/message.component.less\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { Message } from '../../services/chat.service';\nimport { UserData } from '../../services/user.service';\nimport * as randomColor from 'randomcolor';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.less']\n})\nexport class MessageComponent implements OnInit {\n\n  @Input() message: Message;\n  @Input() user: UserData;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getRandomColor() {\n    const color = randomColor({\n      hue: 'yellow',\n      luminosity: 'light',\n      seed: this.message.userId\n    });\n\n    return { 'background': color };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/chat/message/message.component.ts","export const host = 'http://127.0.0.1:3000/api/';\nexport const wsHost = 'ws://127.0.0.1:3000/api/chat/connection/';\nexport const backHost = 'http://127.0.0.1:3000';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/config.ts","import { Injectable } from '@angular/core';\nimport { EventEmitter } from 'events';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport { fromEvent } from 'rxjs/observable/fromEvent';\nimport { WebSocetService } from './websocet.service';\nimport { wsHost } from '../config';\nimport { Observable } from 'rxjs/Observable';\nimport {UserService} from './user.service';\n\nexport enum ChatEvents {\n  ADD = 'ADD',\n  DELETE = 'DELETE',\n  LIKE = 'LIKE'\n}\n\nexport interface Message {\n  id: number;\n  userId: number;\n  login: string;\n  content: string;\n}\n\n@Injectable()\nexport class ChatService {\n  private websocket: Subject<any>;\n  private eventEmitter = new EventEmitter();\n  public messageList: Message[];\n\n  constructor(\n    private websocketService: WebSocetService,\n    private userService: UserService\n  ) {\n    this.openConnection();\n    this.createEvents();\n    this.messageList = [];\n  }\n\n  openConnection() {\n   this.websocket = <Subject<any>>this.websocketService\n      .connect(wsHost + this.userService.user.id)\n      .map((response: MessageEvent): any => {\n        return JSON.parse(response.data);\n      });\n  }\n\n  createEvents() {\n    this.websocket.subscribe(\n      res => {\n        if (res['event'] === ChatEvents.ADD) {\n          console.log('emit' + ChatEvents.ADD);\n          this.eventEmitter.emit(ChatEvents.ADD,\n            res['data']);\n        }\n        if (res[ChatEvents.DELETE] !== undefined) {\n          console.log('emit' + ChatEvents.DELETE);\n          this.eventEmitter.emit(ChatEvents.DELETE,\n            res[ChatEvents.DELETE]);\n        }\n        if (res[ChatEvents.LIKE] !== undefined) {\n          console.log('emit' + ChatEvents.LIKE);\n          this.eventEmitter.emit(ChatEvents.LIKE,\n            res[ChatEvents.LIKE]);\n        }\n      },\n      err => {\n        console.log(err);\n      },\n      () => {\n        if (this.websocketService.opening) {\n          this.openConnection();\n          this.createEvents();\n        }\n      }\n    );\n  }\n\n  getSubscriptionToEvent(event: ChatEvents): Observable<any> {\n    return fromEvent(this.eventEmitter, event);\n  }\n\n  sendEvent(event: ChatEvents, data: object) {\n    this.websocket.next({\n      event: event,\n      data: data\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/chat.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {backHost, host} from '../config';\nimport {Message} from './chat.service';\n\nexport interface UserData {\n  id: number;\n  login: string;\n}\n\n@Injectable()\nexport class UserService {\n  user: UserData;\n  headers: HttpHeaders;\n  options: object;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.headers = new HttpHeaders({\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Origin': backHost,\n      'Access-Control-Allow-Methods': '*',\n      'Access-Control-Allow-Headers': [ 'Content-Type', '*']\n    });\n    this.options = { headers: this.headers, withCredentials: true };\n    }\n\n  checkIsLogin(login): Observable<any> {\n    const formData = new FormData(), url = host + 'auth/check';\n\n    formData.append('login', login);\n\n    return this.http.post<any>(url, formData);\n  }\n\n  addUser(login): Observable<UserData> {\n    const formData = new FormData(), url = host + 'auth';\n\n    formData.append('login', login);\n\n    return this.http.post<UserData>(url, formData, this.options);\n  }\n\n  checkSession(): Observable<UserData> {\n    const url = host + 'session/check';\n\n    return this.http.get<UserData>(url, this.options);\n  }\n\n  getMessageList(): Observable<Message[]> {\n    const url = host + 'chat/get/messages';\n\n    return this.http.get<Message[]>(url);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\n\n@Injectable()\nexport class WebSocetService {\n  private subject = new Subject<any>();\n  ws = undefined;\n  opening = true;\n\n  constructor() { }\n\n  public connect(url): Subject<any> {\n    this.subject = this.create(url);\n    console.log('Successfully connected: ' + url);\n    return this.subject;\n  }\n\n  private create(url): Subject<any> {\n    this.ws = new WebSocket(url);\n\n    const observable = Observable.create(\n      (obs: Observer<any>) => {\n        this.ws.onmessage = obs.next.bind(obs);\n        this.ws.onerror = obs.error.bind(obs);\n        this.ws.onclose = obs.complete.bind(obs);\n        return this.ws.close.bind(this.ws);\n      });\n\n    const observer = {\n      next: (data: Object) => {\n        if (this.ws.readyState === WebSocket.OPEN) {\n          this.ws.send(JSON.stringify(data));\n        }\n      }\n    };\n\n    return Subject.create(observer, observable);\n  }\n\n  close() {\n    if (this.ws !== undefined) {\n      this.ws.close();\n      console.log('WebSocket closed');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/websocet.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}